package com.smart.homelink.dao;

import com.smart.homelink.model.AirSensor;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface AirSensorMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor
     *
     * @mbg.generated
     */
    @Delete({
        "delete from air_sensor",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor
     *
     * @mbg.generated
     */
    @Insert({
        "insert into air_sensor (id, temp, ",
        "humidity, create_time, ",
        "altitude, qnh)",
        "values (#{id,jdbcType=BIGINT}, #{temp,jdbcType=DECIMAL}, ",
        "#{humidity,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{altitude,jdbcType=DECIMAL}, #{qnh,jdbcType=DECIMAL})"
    })
    int insert(AirSensor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor
     *
     * @mbg.generated
     */
    @InsertProvider(type=AirSensorSqlProvider.class, method="insertSelective")
    int insertSelective(AirSensor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, temp, humidity, create_time, altitude, qnh",
        "from air_sensor",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results(  {
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="temp", property="temp", jdbcType=JdbcType.DECIMAL),
        @Result(column="humidity", property="humidity", jdbcType=JdbcType.DECIMAL),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="altitude", property="altitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="qnh", property="qnh", jdbcType=JdbcType.DECIMAL)
    })
    AirSensor selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AirSensorSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AirSensor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor
     *
     * @mbg.generated
     */
    @Update({
        "update air_sensor",
        "set temp = #{temp,jdbcType=DECIMAL},",
          "humidity = #{humidity,jdbcType=DECIMAL},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "altitude = #{altitude,jdbcType=DECIMAL},",
          "qnh = #{qnh,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(AirSensor record);
    @Select({
            "select",
            "id, temp, humidity, create_time, altitude, qnh",
            "from air_sensor",
            "order by create_time desc limit ${len}"
    })
    List<AirSensor> getLastData(@Param("len") Integer len);
}