package com.smart.homelink.dao;

import com.smart.homelink.model.AirSensorRecord;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface AirSensorRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor_record
     *
     * @mbg.generated
     */
    @Delete({
        "delete from air_sensor_record",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor_record
     *
     * @mbg.generated
     */
    @Insert({
        "insert into air_sensor_record (id, c_id, create_time, ",
        "home_id, temp, humidity, ",
        "altitude, qnh)",
        "values (#{id,jdbcType=BIGINT}, #{cId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{homeId,jdbcType=BIGINT}, #{temp,jdbcType=DECIMAL}, #{humidity,jdbcType=DECIMAL}, ",
        "#{altitude,jdbcType=DECIMAL}, #{qnh,jdbcType=DECIMAL})"
    })
    int insert(AirSensorRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor_record
     *
     * @mbg.generated
     */
    @InsertProvider(type=AirSensorRecordSqlProvider.class, method="insertSelective")
    int insertSelective(AirSensorRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor_record
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, c_id, create_time, home_id, temp, humidity, altitude, qnh",
        "from air_sensor_record",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results( id = "AirSensorRecordMap",value = {
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="c_id", property="cId", jdbcType=JdbcType.BIGINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="home_id", property="homeId", jdbcType=JdbcType.BIGINT),
        @Result(column="temp", property="temp", jdbcType=JdbcType.DECIMAL),
        @Result(column="humidity", property="humidity", jdbcType=JdbcType.DECIMAL),
        @Result(column="altitude", property="altitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="qnh", property="qnh", jdbcType=JdbcType.DECIMAL)
    })
    AirSensorRecord selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor_record
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AirSensorRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AirSensorRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table air_sensor_record
     *
     * @mbg.generated
     */
    @Update({
        "update air_sensor_record",
        "set c_id = #{cId,jdbcType=BIGINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "home_id = #{homeId,jdbcType=BIGINT},",
          "temp = #{temp,jdbcType=DECIMAL},",
          "humidity = #{humidity,jdbcType=DECIMAL},",
          "altitude = #{altitude,jdbcType=DECIMAL},",
          "qnh = #{qnh,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(AirSensorRecord record);

    @Select({
            "select",
            "id, c_id, create_time, home_id, temp, humidity, altitude, qnh",
            "from air_sensor_record",
            "order by create_time desc limit ${len}"
    })
    @ResultMap("AirSensorRecordMap")
    List<AirSensorRecord> getLastData(@Param("len") Integer len);
}