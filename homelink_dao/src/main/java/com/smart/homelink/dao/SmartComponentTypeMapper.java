package com.smart.homelink.dao;

import com.smart.homelink.model.SmartComponentType;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SmartComponentTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smart_component_type
     *
     * @mbg.generated
     */
    @Delete({
        "delete from smart_component_type",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smart_component_type
     *
     * @mbg.generated
     */
    @Insert({
        "insert into smart_component_type (id, type_name, ",
        "status, create_time, ",
        "is_controller_center, remark)",
        "values (#{id,jdbcType=BIGINT}, #{typeName,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{isControllerCenter,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})"
    })
    int insert(SmartComponentType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smart_component_type
     *
     * @mbg.generated
     */
    @InsertProvider(type=SmartComponentTypeSqlProvider.class, method="insertSelective")
    int insertSelective(SmartComponentType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smart_component_type
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, type_name, status, create_time, is_controller_center, remark",
        "from smart_component_type",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="type_name", property="typeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="is_controller_center", property="isControllerCenter", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    SmartComponentType selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smart_component_type
     *
     * @mbg.generated
     */
    @UpdateProvider(type=SmartComponentTypeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SmartComponentType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smart_component_type
     *
     * @mbg.generated
     */
    @Update({
        "update smart_component_type",
        "set type_name = #{typeName,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "is_controller_center = #{isControllerCenter,jdbcType=INTEGER},",
          "remark = #{remark,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(SmartComponentType record);
}